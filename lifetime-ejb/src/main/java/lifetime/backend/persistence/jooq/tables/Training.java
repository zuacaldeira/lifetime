/**
 * This class is generated by jOOQ
 */
package lifetime.backend.persistence.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import lifetime.backend.persistence.jooq.Keys;
import lifetime.backend.persistence.jooq.Lifetime;
import lifetime.backend.persistence.jooq.tables.records.TrainingRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Training extends TableImpl<TrainingRecord> {

    private static final long serialVersionUID = -1775945307;

    /**
     * The reference instance of <code>lifetime.training</code>
     */
    public static final Training TRAINING = new Training();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TrainingRecord> getRecordType() {
        return TrainingRecord.class;
    }

    /**
     * The column <code>lifetime.training.id</code>.
     */
    public final TableField<TrainingRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lifetime.training.type</code>.
     */
    public final TableField<TrainingRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

    /**
     * The column <code>lifetime.training.sport_id</code>.
     */
    public final TableField<TrainingRecord, Integer> SPORT_ID = createField("sport_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lifetime.training.sport_lifetime_event_id</code>.
     */
    public final TableField<TrainingRecord, Integer> SPORT_LIFETIME_EVENT_ID = createField("sport_lifetime_event_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>lifetime.training</code> table reference
     */
    public Training() {
        this("training", null);
    }

    /**
     * Create an aliased <code>lifetime.training</code> table reference
     */
    public Training(String alias) {
        this(alias, TRAINING);
    }

    private Training(String alias, Table<TrainingRecord> aliased) {
        this(alias, aliased, null);
    }

    private Training(String alias, Table<TrainingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lifetime.LIFETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TrainingRecord> getPrimaryKey() {
        return Keys.KEY_TRAINING_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TrainingRecord>> getKeys() {
        return Arrays.<UniqueKey<TrainingRecord>>asList(Keys.KEY_TRAINING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TrainingRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TrainingRecord, ?>>asList(Keys.FK_TRAINING_SPORT1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Training as(String alias) {
        return new Training(alias, this);
    }

    /**
     * Rename this table
     */
    public Training rename(String name) {
        return new Training(name, null);
    }
}
