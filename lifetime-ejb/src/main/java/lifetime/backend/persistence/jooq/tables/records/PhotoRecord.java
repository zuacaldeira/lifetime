/**
 * This class is generated by jOOQ
 */
package lifetime.backend.persistence.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PhotoRecord extends org.jooq.impl.UpdatableRecordImpl<lifetime.backend.persistence.jooq.tables.records.PhotoRecord> implements org.jooq.Record2<java.lang.Integer, byte[]> {

	private static final long serialVersionUID = -1153805394;

	/**
	 * Setter for <code>lifetime.photo.id</code>.
	 */
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>lifetime.photo.id</code>.
	 */
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>lifetime.photo.data</code>.
	 */
	public void setData(byte[] value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>lifetime.photo.data</code>.
	 */
	public byte[] getData() {
		return (byte[]) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.Integer, byte[]> fieldsRow() {
		return (org.jooq.Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.Integer, byte[]> valuesRow() {
		return (org.jooq.Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return lifetime.backend.persistence.jooq.tables.Photo.PHOTO.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field2() {
		return lifetime.backend.persistence.jooq.tables.Photo.PHOTO.DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value2() {
		return getData();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PhotoRecord value1(java.lang.Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PhotoRecord value2(byte[] value) {
		setData(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PhotoRecord values(java.lang.Integer value1, byte[] value2) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PhotoRecord
	 */
	public PhotoRecord() {
		super(lifetime.backend.persistence.jooq.tables.Photo.PHOTO);
	}

	/**
	 * Create a detached, initialised PhotoRecord
	 */
	public PhotoRecord(java.lang.Integer id, byte[] data) {
		super(lifetime.backend.persistence.jooq.tables.Photo.PHOTO);

		setValue(0, id);
		setValue(1, data);
	}
}
