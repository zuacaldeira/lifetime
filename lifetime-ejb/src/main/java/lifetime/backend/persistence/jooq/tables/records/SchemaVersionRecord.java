/**
 * This class is generated by jOOQ
 */
package lifetime.backend.persistence.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchemaVersionRecord extends org.jooq.impl.UpdatableRecordImpl<lifetime.backend.persistence.jooq.tables.records.SchemaVersionRecord> implements org.jooq.Record10<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.sql.Timestamp, java.lang.Integer, java.lang.Byte> {

	private static final long serialVersionUID = 903286721;

	/**
	 * Setter for <code>lifetime.schema_version.installed_rank</code>.
	 */
	public void setInstalledRank(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>lifetime.schema_version.installed_rank</code>.
	 */
	public java.lang.Integer getInstalledRank() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>lifetime.schema_version.version</code>.
	 */
	public void setVersion(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>lifetime.schema_version.version</code>.
	 */
	public java.lang.String getVersion() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>lifetime.schema_version.description</code>.
	 */
	public void setDescription(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>lifetime.schema_version.description</code>.
	 */
	public java.lang.String getDescription() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>lifetime.schema_version.type</code>.
	 */
	public void setType(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>lifetime.schema_version.type</code>.
	 */
	public java.lang.String getType() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>lifetime.schema_version.script</code>.
	 */
	public void setScript(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>lifetime.schema_version.script</code>.
	 */
	public java.lang.String getScript() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>lifetime.schema_version.checksum</code>.
	 */
	public void setChecksum(java.lang.Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>lifetime.schema_version.checksum</code>.
	 */
	public java.lang.Integer getChecksum() {
		return (java.lang.Integer) getValue(5);
	}

	/**
	 * Setter for <code>lifetime.schema_version.installed_by</code>.
	 */
	public void setInstalledBy(java.lang.String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>lifetime.schema_version.installed_by</code>.
	 */
	public java.lang.String getInstalledBy() {
		return (java.lang.String) getValue(6);
	}

	/**
	 * Setter for <code>lifetime.schema_version.installed_on</code>.
	 */
	public void setInstalledOn(java.sql.Timestamp value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>lifetime.schema_version.installed_on</code>.
	 */
	public java.sql.Timestamp getInstalledOn() {
		return (java.sql.Timestamp) getValue(7);
	}

	/**
	 * Setter for <code>lifetime.schema_version.execution_time</code>.
	 */
	public void setExecutionTime(java.lang.Integer value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>lifetime.schema_version.execution_time</code>.
	 */
	public java.lang.Integer getExecutionTime() {
		return (java.lang.Integer) getValue(8);
	}

	/**
	 * Setter for <code>lifetime.schema_version.success</code>.
	 */
	public void setSuccess(java.lang.Byte value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>lifetime.schema_version.success</code>.
	 */
	public java.lang.Byte getSuccess() {
		return (java.lang.Byte) getValue(9);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record10 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row10<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.sql.Timestamp, java.lang.Integer, java.lang.Byte> fieldsRow() {
		return (org.jooq.Row10) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row10<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.sql.Timestamp, java.lang.Integer, java.lang.Byte> valuesRow() {
		return (org.jooq.Row10) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return lifetime.backend.persistence.jooq.tables.SchemaVersion.SCHEMA_VERSION.INSTALLED_RANK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return lifetime.backend.persistence.jooq.tables.SchemaVersion.SCHEMA_VERSION.VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return lifetime.backend.persistence.jooq.tables.SchemaVersion.SCHEMA_VERSION.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return lifetime.backend.persistence.jooq.tables.SchemaVersion.SCHEMA_VERSION.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return lifetime.backend.persistence.jooq.tables.SchemaVersion.SCHEMA_VERSION.SCRIPT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field6() {
		return lifetime.backend.persistence.jooq.tables.SchemaVersion.SCHEMA_VERSION.CHECKSUM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field7() {
		return lifetime.backend.persistence.jooq.tables.SchemaVersion.SCHEMA_VERSION.INSTALLED_BY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field8() {
		return lifetime.backend.persistence.jooq.tables.SchemaVersion.SCHEMA_VERSION.INSTALLED_ON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field9() {
		return lifetime.backend.persistence.jooq.tables.SchemaVersion.SCHEMA_VERSION.EXECUTION_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field10() {
		return lifetime.backend.persistence.jooq.tables.SchemaVersion.SCHEMA_VERSION.SUCCESS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getInstalledRank();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getScript();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value6() {
		return getChecksum();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value7() {
		return getInstalledBy();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value8() {
		return getInstalledOn();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value9() {
		return getExecutionTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value10() {
		return getSuccess();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value1(java.lang.Integer value) {
		setInstalledRank(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value2(java.lang.String value) {
		setVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value3(java.lang.String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value4(java.lang.String value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value5(java.lang.String value) {
		setScript(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value6(java.lang.Integer value) {
		setChecksum(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value7(java.lang.String value) {
		setInstalledBy(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value8(java.sql.Timestamp value) {
		setInstalledOn(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value9(java.lang.Integer value) {
		setExecutionTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord value10(java.lang.Byte value) {
		setSuccess(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaVersionRecord values(java.lang.Integer value1, java.lang.String value2, java.lang.String value3, java.lang.String value4, java.lang.String value5, java.lang.Integer value6, java.lang.String value7, java.sql.Timestamp value8, java.lang.Integer value9, java.lang.Byte value10) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SchemaVersionRecord
	 */
	public SchemaVersionRecord() {
		super(lifetime.backend.persistence.jooq.tables.SchemaVersion.SCHEMA_VERSION);
	}

	/**
	 * Create a detached, initialised SchemaVersionRecord
	 */
	public SchemaVersionRecord(java.lang.Integer installedRank, java.lang.String version, java.lang.String description, java.lang.String type, java.lang.String script, java.lang.Integer checksum, java.lang.String installedBy, java.sql.Timestamp installedOn, java.lang.Integer executionTime, java.lang.Byte success) {
		super(lifetime.backend.persistence.jooq.tables.SchemaVersion.SCHEMA_VERSION);

		setValue(0, installedRank);
		setValue(1, version);
		setValue(2, description);
		setValue(3, type);
		setValue(4, script);
		setValue(5, checksum);
		setValue(6, installedBy);
		setValue(7, installedOn);
		setValue(8, executionTime);
		setValue(9, success);
	}
}
