/**
 * This class is generated by jOOQ
 */
package lifetime.backend.persistence.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import lifetime.backend.persistence.jooq.Keys;
import lifetime.backend.persistence.jooq.Lifetime;
import lifetime.backend.persistence.jooq.tables.records.PhotoRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Photo extends TableImpl<PhotoRecord> {

    private static final long serialVersionUID = 956252761;

    /**
     * The reference instance of <code>lifetime.photo</code>
     */
    public static final Photo PHOTO = new Photo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PhotoRecord> getRecordType() {
        return PhotoRecord.class;
    }

    /**
     * The column <code>lifetime.photo.id</code>.
     */
    public final TableField<PhotoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lifetime.photo.data</code>.
     */
    public final TableField<PhotoRecord, byte[]> DATA = createField("data", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * Create a <code>lifetime.photo</code> table reference
     */
    public Photo() {
        this("photo", null);
    }

    /**
     * Create an aliased <code>lifetime.photo</code> table reference
     */
    public Photo(String alias) {
        this(alias, PHOTO);
    }

    private Photo(String alias, Table<PhotoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Photo(String alias, Table<PhotoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lifetime.LIFETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PhotoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PHOTO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PhotoRecord> getPrimaryKey() {
        return Keys.KEY_PHOTO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PhotoRecord>> getKeys() {
        return Arrays.<UniqueKey<PhotoRecord>>asList(Keys.KEY_PHOTO_PRIMARY, Keys.KEY_PHOTO_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Photo as(String alias) {
        return new Photo(alias, this);
    }

    /**
     * Rename this table
     */
    public Photo rename(String name) {
        return new Photo(name, null);
    }
}
