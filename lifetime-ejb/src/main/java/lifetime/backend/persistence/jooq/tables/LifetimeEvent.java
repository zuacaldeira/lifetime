/**
 * This class is generated by jOOQ
 */
package lifetime.backend.persistence.jooq.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import lifetime.backend.persistence.jooq.Keys;
import lifetime.backend.persistence.jooq.Lifetime;
import lifetime.backend.persistence.jooq.enums.LifetimeEventStatus;
import lifetime.backend.persistence.jooq.tables.records.LifetimeEventRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LifetimeEvent extends TableImpl<LifetimeEventRecord> {

    private static final long serialVersionUID = 532797232;

    /**
     * The reference instance of <code>lifetime.lifetime_event</code>
     */
    public static final LifetimeEvent LIFETIME_EVENT = new LifetimeEvent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LifetimeEventRecord> getRecordType() {
        return LifetimeEventRecord.class;
    }

    /**
     * The column <code>lifetime.lifetime_event.id</code>.
     */
    public final TableField<LifetimeEventRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lifetime.lifetime_event.title</code>.
     */
    public final TableField<LifetimeEventRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

    /**
     * The column <code>lifetime.lifetime_event.event_start</code>.
     */
    public final TableField<LifetimeEventRecord, Date> EVENT_START = createField("event_start", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>lifetime.lifetime_event.event_end</code>.
     */
    public final TableField<LifetimeEventRecord, Date> EVENT_END = createField("event_end", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>lifetime.lifetime_event.status</code>.
     */
    public final TableField<LifetimeEventRecord, LifetimeEventStatus> STATUS = createField("status", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(lifetime.backend.persistence.jooq.enums.LifetimeEventStatus.class), this, "");

    /**
     * The column <code>lifetime.lifetime_event.lifetime_user_id</code>.
     */
    public final TableField<LifetimeEventRecord, Integer> LIFETIME_USER_ID = createField("lifetime_user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lifetime.lifetime_event.lifetime_org_id</code>.
     */
    public final TableField<LifetimeEventRecord, Integer> LIFETIME_ORG_ID = createField("lifetime_org_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lifetime.lifetime_event.address_id</code>.
     */
    public final TableField<LifetimeEventRecord, Integer> ADDRESS_ID = createField("address_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>lifetime.lifetime_event</code> table reference
     */
    public LifetimeEvent() {
        this("lifetime_event", null);
    }

    /**
     * Create an aliased <code>lifetime.lifetime_event</code> table reference
     */
    public LifetimeEvent(String alias) {
        this(alias, LIFETIME_EVENT);
    }

    private LifetimeEvent(String alias, Table<LifetimeEventRecord> aliased) {
        this(alias, aliased, null);
    }

    private LifetimeEvent(String alias, Table<LifetimeEventRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lifetime.LIFETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LifetimeEventRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LIFETIME_EVENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LifetimeEventRecord> getPrimaryKey() {
        return Keys.KEY_LIFETIME_EVENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LifetimeEventRecord>> getKeys() {
        return Arrays.<UniqueKey<LifetimeEventRecord>>asList(Keys.KEY_LIFETIME_EVENT_PRIMARY, Keys.KEY_LIFETIME_EVENT_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LifetimeEventRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LifetimeEventRecord, ?>>asList(Keys.FK_LIFETIME_EVENT_LIFETIME_USER1, Keys.FK_LIFETIME_EVENT_LIFETIME_ORG1, Keys.FK_LIFETIME_EVENT_ADDRESS1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LifetimeEvent as(String alias) {
        return new LifetimeEvent(alias, this);
    }

    /**
     * Rename this table
     */
    public LifetimeEvent rename(String name) {
        return new LifetimeEvent(name, null);
    }
}
