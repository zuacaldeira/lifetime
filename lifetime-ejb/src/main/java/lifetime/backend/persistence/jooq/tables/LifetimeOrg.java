/**
 * This class is generated by jOOQ
 */
package lifetime.backend.persistence.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import lifetime.backend.persistence.jooq.Keys;
import lifetime.backend.persistence.jooq.Lifetime;
import lifetime.backend.persistence.jooq.tables.records.LifetimeOrgRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LifetimeOrg extends TableImpl<LifetimeOrgRecord> {

    private static final long serialVersionUID = -1732554832;

    /**
     * The reference instance of <code>lifetime.lifetime_org</code>
     */
    public static final LifetimeOrg LIFETIME_ORG = new LifetimeOrg();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LifetimeOrgRecord> getRecordType() {
        return LifetimeOrgRecord.class;
    }

    /**
     * The column <code>lifetime.lifetime_org.id</code>.
     */
    public final TableField<LifetimeOrgRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lifetime.lifetime_org.name</code>.
     */
    public final TableField<LifetimeOrgRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>lifetime.lifetime_org.account_id</code>.
     */
    public final TableField<LifetimeOrgRecord, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lifetime.lifetime_org.address_id</code>.
     */
    public final TableField<LifetimeOrgRecord, Integer> ADDRESS_ID = createField("address_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>lifetime.lifetime_org</code> table reference
     */
    public LifetimeOrg() {
        this("lifetime_org", null);
    }

    /**
     * Create an aliased <code>lifetime.lifetime_org</code> table reference
     */
    public LifetimeOrg(String alias) {
        this(alias, LIFETIME_ORG);
    }

    private LifetimeOrg(String alias, Table<LifetimeOrgRecord> aliased) {
        this(alias, aliased, null);
    }

    private LifetimeOrg(String alias, Table<LifetimeOrgRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lifetime.LIFETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LifetimeOrgRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LIFETIME_ORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LifetimeOrgRecord> getPrimaryKey() {
        return Keys.KEY_LIFETIME_ORG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LifetimeOrgRecord>> getKeys() {
        return Arrays.<UniqueKey<LifetimeOrgRecord>>asList(Keys.KEY_LIFETIME_ORG_PRIMARY, Keys.KEY_LIFETIME_ORG_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LifetimeOrgRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LifetimeOrgRecord, ?>>asList(Keys.FK_LIFETIME_ORG_ACCOUNT1, Keys.FK_LIFETIME_ORG_ADDRESS1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LifetimeOrg as(String alias) {
        return new LifetimeOrg(alias, this);
    }

    /**
     * Rename this table
     */
    public LifetimeOrg rename(String name) {
        return new LifetimeOrg(name, null);
    }
}
