/**
 * This class is generated by jOOQ
 */
package lifetime.backend.persistence.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import lifetime.backend.persistence.jooq.Keys;
import lifetime.backend.persistence.jooq.Lifetime;
import lifetime.backend.persistence.jooq.tables.records.StudyRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Study extends TableImpl<StudyRecord> {

    private static final long serialVersionUID = 1650882615;

    /**
     * The reference instance of <code>lifetime.study</code>
     */
    public static final Study STUDY = new Study();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudyRecord> getRecordType() {
        return StudyRecord.class;
    }

    /**
     * The column <code>lifetime.study.id</code>.
     */
    public final TableField<StudyRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lifetime.study.name</code>.
     */
    public final TableField<StudyRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>lifetime.study.lifetime_event_id</code>.
     */
    public final TableField<StudyRecord, Integer> LIFETIME_EVENT_ID = createField("lifetime_event_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>lifetime.study</code> table reference
     */
    public Study() {
        this("study", null);
    }

    /**
     * Create an aliased <code>lifetime.study</code> table reference
     */
    public Study(String alias) {
        this(alias, STUDY);
    }

    private Study(String alias, Table<StudyRecord> aliased) {
        this(alias, aliased, null);
    }

    private Study(String alias, Table<StudyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lifetime.LIFETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StudyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STUDY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StudyRecord> getPrimaryKey() {
        return Keys.KEY_STUDY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StudyRecord>> getKeys() {
        return Arrays.<UniqueKey<StudyRecord>>asList(Keys.KEY_STUDY_PRIMARY, Keys.KEY_STUDY_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StudyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StudyRecord, ?>>asList(Keys.FK_STUDY_LIFETIME_EVENT1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Study as(String alias) {
        return new Study(alias, this);
    }

    /**
     * Rename this table
     */
    public Study rename(String name) {
        return new Study(name, null);
    }
}
