/**
 * This class is generated by jOOQ
 */
package lifetime.backend.persistence.jooq.tables.records;


import javax.annotation.Generated;

import lifetime.backend.persistence.jooq.tables.WorkUnit;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkUnitRecord extends UpdatableRecordImpl<WorkUnitRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = -1781678570;

    /**
     * Setter for <code>lifetime.work_unit.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>lifetime.work_unit.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>lifetime.work_unit.know_how_unit_id</code>.
     */
    public void setKnowHowUnitId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>lifetime.work_unit.know_how_unit_id</code>.
     */
    public Integer getKnowHowUnitId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>lifetime.work_unit.task_id</code>.
     */
    public void setTaskId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>lifetime.work_unit.task_id</code>.
     */
    public Integer getTaskId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return WorkUnit.WORK_UNIT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return WorkUnit.WORK_UNIT.KNOW_HOW_UNIT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return WorkUnit.WORK_UNIT.TASK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getKnowHowUnitId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getTaskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WorkUnitRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WorkUnitRecord value2(Integer value) {
        setKnowHowUnitId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WorkUnitRecord value3(Integer value) {
        setTaskId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WorkUnitRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WorkUnitRecord
     */
    public WorkUnitRecord() {
        super(WorkUnit.WORK_UNIT);
    }

    /**
     * Create a detached, initialised WorkUnitRecord
     */
    public WorkUnitRecord(Integer id, Integer knowHowUnitId, Integer taskId) {
        super(WorkUnit.WORK_UNIT);

        set(0, id);
        set(1, knowHowUnitId);
        set(2, taskId);
    }
}
