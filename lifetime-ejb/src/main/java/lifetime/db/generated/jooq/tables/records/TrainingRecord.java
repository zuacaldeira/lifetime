/**
 * This class is generated by jOOQ
 */
package lifetime.db.generated.jooq.tables.records;


import javax.annotation.Generated;

import lifetime.db.generated.jooq.tables.Training;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrainingRecord extends UpdatableRecordImpl<TrainingRecord> implements Record4<Integer, String, Integer, Integer> {

    private static final long serialVersionUID = -1556559852;

    /**
     * Setter for <code>lifetime.training.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>lifetime.training.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>lifetime.training.type</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>lifetime.training.type</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>lifetime.training.sport_id</code>.
     */
    public void setSportId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>lifetime.training.sport_id</code>.
     */
    public Integer getSportId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>lifetime.training.sport_lifetime_event_id</code>.
     */
    public void setSportLifetimeEventId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>lifetime.training.sport_lifetime_event_id</code>.
     */
    public Integer getSportLifetimeEventId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Training.TRAINING.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Training.TRAINING.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Training.TRAINING.SPORT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Training.TRAINING.SPORT_LIFETIME_EVENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getSportId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getSportLifetimeEventId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TrainingRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TrainingRecord value2(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TrainingRecord value3(Integer value) {
        setSportId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TrainingRecord value4(Integer value) {
        setSportLifetimeEventId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TrainingRecord values(Integer value1, String value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TrainingRecord
     */
    public TrainingRecord() {
        super(Training.TRAINING);
    }

    /**
     * Create a detached, initialised TrainingRecord
     */
    public TrainingRecord(Integer id, String type, Integer sportId, Integer sportLifetimeEventId) {
        super(Training.TRAINING);

        set(0, id);
        set(1, type);
        set(2, sportId);
        set(3, sportLifetimeEventId);
    }
}
